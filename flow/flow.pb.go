// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/codelingo/rpc/flow/flow.proto

package flow

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Request contains the information to start a Flow
type Request struct {
	// flow is the name of the Flow
	Flow string `protobuf:"bytes,1,opt,name=flow,proto3" json:"flow,omitempty"`
	// payload contains any data required to configure the Flow.
	Payload              *any.Any `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3976a3fc1d3bd0b, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetFlow() string {
	if m != nil {
		return m.Flow
	}
	return ""
}

func (m *Request) GetPayload() *any.Any {
	if m != nil {
		return m.Payload
	}
	return nil
}

// Reply is one reply of an executed Flow.
type Reply struct {
	// payload contains any data returned by the executed Flow.
	Payload *any.Any `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// error is any error found during the execution of the Flow.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// isHeartbeat is used to periodically send pings from the server to keep long running connections alive.
	// clients can safely ignore this field as no other data will be sent with it.
	IsHeartbeat          bool     `protobuf:"varint,15,opt,name=isHeartbeat,proto3" json:"isHeartbeat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3976a3fc1d3bd0b, []int{1}
}

func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (m *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(m, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetPayload() *any.Any {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Reply) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *Reply) GetIsHeartbeat() bool {
	if m != nil {
		return m.IsHeartbeat
	}
	return false
}

// The request message containing the files or directories to review.
type ReviewRequest struct {
	Host     string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Hostname string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// Types that are valid to be assigned to OwnerOrDepot:
	//	*ReviewRequest_Owner
	//	*ReviewRequest_Depot
	OwnerOrDepot         isReviewRequest_OwnerOrDepot `protobuf_oneof:"ownerOrDepot"`
	Repo                 string                       `protobuf:"bytes,4,opt,name=repo,proto3" json:"repo,omitempty"`
	Sha                  string                       `protobuf:"bytes,5,opt,name=sha,proto3" json:"sha,omitempty"`
	Patches              []string                     `protobuf:"bytes,6,rep,name=Patches,proto3" json:"Patches,omitempty"`
	IsPullRequest        bool                         `protobuf:"varint,7,opt,name=isPullRequest,proto3" json:"isPullRequest,omitempty"`
	PullRequestID        int64                        `protobuf:"varint,8,opt,name=pullRequestID,proto3" json:"pullRequestID,omitempty"`
	Vcs                  string                       `protobuf:"bytes,9,opt,name=vcs,proto3" json:"vcs,omitempty"`
	Dotlingo             string                       `protobuf:"bytes,10,opt,name=dotlingo,proto3" json:"dotlingo,omitempty"`
	Dir                  string                       `protobuf:"bytes,11,opt,name=dir,proto3" json:"dir,omitempty"`
	Path                 string                       `protobuf:"bytes,14,opt,name=path,proto3" json:"path,omitempty"`
	DiffID               int64                        `protobuf:"varint,15,opt,name=diffID,proto3" json:"diffID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ReviewRequest) Reset()         { *m = ReviewRequest{} }
func (m *ReviewRequest) String() string { return proto.CompactTextString(m) }
func (*ReviewRequest) ProtoMessage()    {}
func (*ReviewRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3976a3fc1d3bd0b, []int{2}
}

func (m *ReviewRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReviewRequest.Unmarshal(m, b)
}
func (m *ReviewRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReviewRequest.Marshal(b, m, deterministic)
}
func (m *ReviewRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReviewRequest.Merge(m, src)
}
func (m *ReviewRequest) XXX_Size() int {
	return xxx_messageInfo_ReviewRequest.Size(m)
}
func (m *ReviewRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReviewRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReviewRequest proto.InternalMessageInfo

func (m *ReviewRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *ReviewRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

type isReviewRequest_OwnerOrDepot interface {
	isReviewRequest_OwnerOrDepot()
}

type ReviewRequest_Owner struct {
	Owner string `protobuf:"bytes,12,opt,name=owner,proto3,oneof"`
}

type ReviewRequest_Depot struct {
	Depot string `protobuf:"bytes,13,opt,name=depot,proto3,oneof"`
}

func (*ReviewRequest_Owner) isReviewRequest_OwnerOrDepot() {}

func (*ReviewRequest_Depot) isReviewRequest_OwnerOrDepot() {}

func (m *ReviewRequest) GetOwnerOrDepot() isReviewRequest_OwnerOrDepot {
	if m != nil {
		return m.OwnerOrDepot
	}
	return nil
}

func (m *ReviewRequest) GetOwner() string {
	if x, ok := m.GetOwnerOrDepot().(*ReviewRequest_Owner); ok {
		return x.Owner
	}
	return ""
}

func (m *ReviewRequest) GetDepot() string {
	if x, ok := m.GetOwnerOrDepot().(*ReviewRequest_Depot); ok {
		return x.Depot
	}
	return ""
}

func (m *ReviewRequest) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

func (m *ReviewRequest) GetSha() string {
	if m != nil {
		return m.Sha
	}
	return ""
}

func (m *ReviewRequest) GetPatches() []string {
	if m != nil {
		return m.Patches
	}
	return nil
}

func (m *ReviewRequest) GetIsPullRequest() bool {
	if m != nil {
		return m.IsPullRequest
	}
	return false
}

func (m *ReviewRequest) GetPullRequestID() int64 {
	if m != nil {
		return m.PullRequestID
	}
	return 0
}

func (m *ReviewRequest) GetVcs() string {
	if m != nil {
		return m.Vcs
	}
	return ""
}

func (m *ReviewRequest) GetDotlingo() string {
	if m != nil {
		return m.Dotlingo
	}
	return ""
}

func (m *ReviewRequest) GetDir() string {
	if m != nil {
		return m.Dir
	}
	return ""
}

func (m *ReviewRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ReviewRequest) GetDiffID() int64 {
	if m != nil {
		return m.DiffID
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ReviewRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ReviewRequest_Owner)(nil),
		(*ReviewRequest_Depot)(nil),
	}
}

// Issue returned from a review.
type Issue struct {
	// The name of the issue.
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Position             *IssueRange       `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Comment              string            `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	CtxBefore            string            `protobuf:"bytes,4,opt,name=ctxBefore,proto3" json:"ctxBefore,omitempty"`
	LineText             string            `protobuf:"bytes,5,opt,name=lineText,proto3" json:"lineText,omitempty"`
	CtxAfter             string            `protobuf:"bytes,6,opt,name=ctxAfter,proto3" json:"ctxAfter,omitempty"`
	Metrics              map[string]string `protobuf:"bytes,7,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tags                 []string          `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	Link                 string            `protobuf:"bytes,9,opt,name=link,proto3" json:"link,omitempty"`
	NewCode              bool              `protobuf:"varint,10,opt,name=newCode,proto3" json:"newCode,omitempty"`
	Patch                string            `protobuf:"bytes,11,opt,name=patch,proto3" json:"patch,omitempty"`
	Err                  string            `protobuf:"bytes,12,opt,name=err,proto3" json:"err,omitempty"`
	Discard              bool              `protobuf:"varint,13,opt,name=discard,proto3" json:"discard,omitempty"`
	DiscardReason        string            `protobuf:"bytes,14,opt,name=discardReason,proto3" json:"discardReason,omitempty"`
	DecoratorOptions     string            `protobuf:"bytes,16,opt,name=DecoratorOptions,proto3" json:"DecoratorOptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Issue) Reset()         { *m = Issue{} }
func (m *Issue) String() string { return proto.CompactTextString(m) }
func (*Issue) ProtoMessage()    {}
func (*Issue) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3976a3fc1d3bd0b, []int{3}
}

func (m *Issue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Issue.Unmarshal(m, b)
}
func (m *Issue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Issue.Marshal(b, m, deterministic)
}
func (m *Issue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Issue.Merge(m, src)
}
func (m *Issue) XXX_Size() int {
	return xxx_messageInfo_Issue.Size(m)
}
func (m *Issue) XXX_DiscardUnknown() {
	xxx_messageInfo_Issue.DiscardUnknown(m)
}

var xxx_messageInfo_Issue proto.InternalMessageInfo

func (m *Issue) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Issue) GetPosition() *IssueRange {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *Issue) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *Issue) GetCtxBefore() string {
	if m != nil {
		return m.CtxBefore
	}
	return ""
}

func (m *Issue) GetLineText() string {
	if m != nil {
		return m.LineText
	}
	return ""
}

func (m *Issue) GetCtxAfter() string {
	if m != nil {
		return m.CtxAfter
	}
	return ""
}

func (m *Issue) GetMetrics() map[string]string {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func (m *Issue) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Issue) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *Issue) GetNewCode() bool {
	if m != nil {
		return m.NewCode
	}
	return false
}

func (m *Issue) GetPatch() string {
	if m != nil {
		return m.Patch
	}
	return ""
}

func (m *Issue) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *Issue) GetDiscard() bool {
	if m != nil {
		return m.Discard
	}
	return false
}

func (m *Issue) GetDiscardReason() string {
	if m != nil {
		return m.DiscardReason
	}
	return ""
}

func (m *Issue) GetDecoratorOptions() string {
	if m != nil {
		return m.DecoratorOptions
	}
	return ""
}

type IssueRange struct {
	Start                *Position `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End                  *Position `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *IssueRange) Reset()         { *m = IssueRange{} }
func (m *IssueRange) String() string { return proto.CompactTextString(m) }
func (*IssueRange) ProtoMessage()    {}
func (*IssueRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3976a3fc1d3bd0b, []int{4}
}

func (m *IssueRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssueRange.Unmarshal(m, b)
}
func (m *IssueRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssueRange.Marshal(b, m, deterministic)
}
func (m *IssueRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssueRange.Merge(m, src)
}
func (m *IssueRange) XXX_Size() int {
	return xxx_messageInfo_IssueRange.Size(m)
}
func (m *IssueRange) XXX_DiscardUnknown() {
	xxx_messageInfo_IssueRange.DiscardUnknown(m)
}

var xxx_messageInfo_IssueRange proto.InternalMessageInfo

func (m *IssueRange) GetStart() *Position {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *IssueRange) GetEnd() *Position {
	if m != nil {
		return m.End
	}
	return nil
}

type Position struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Offset               int64    `protobuf:"varint,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Line                 int64    `protobuf:"varint,3,opt,name=Line,proto3" json:"Line,omitempty"`
	Column               int64    `protobuf:"varint,4,opt,name=Column,proto3" json:"Column,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Position) Reset()         { *m = Position{} }
func (m *Position) String() string { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()    {}
func (*Position) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3976a3fc1d3bd0b, []int{5}
}

func (m *Position) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Position.Unmarshal(m, b)
}
func (m *Position) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Position.Marshal(b, m, deterministic)
}
func (m *Position) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Position.Merge(m, src)
}
func (m *Position) XXX_Size() int {
	return xxx_messageInfo_Position.Size(m)
}
func (m *Position) XXX_DiscardUnknown() {
	xxx_messageInfo_Position.DiscardUnknown(m)
}

var xxx_messageInfo_Position proto.InternalMessageInfo

func (m *Position) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *Position) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *Position) GetLine() int64 {
	if m != nil {
		return m.Line
	}
	return 0
}

func (m *Position) GetColumn() int64 {
	if m != nil {
		return m.Column
	}
	return 0
}

type SearchRequest struct {
	Dotlingo             string   `protobuf:"bytes,1,opt,name=dotlingo,proto3" json:"dotlingo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3976a3fc1d3bd0b, []int{6}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetDotlingo() string {
	if m != nil {
		return m.Dotlingo
	}
	return ""
}

type SearchReply struct {
	Properties           map[string]*PropertyValue `protobuf:"bytes,1,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Error                string                    `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Depth                int64                     `protobuf:"varint,3,opt,name=depth,proto3" json:"depth,omitempty"`
	FactName             string                    `protobuf:"bytes,4,opt,name=factName,proto3" json:"factName,omitempty"`
	Decorators           []string                  `protobuf:"bytes,5,rep,name=decorators,proto3" json:"decorators,omitempty"`
	Children             []*SearchReply            `protobuf:"bytes,6,rep,name=children,proto3" json:"children,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *SearchReply) Reset()         { *m = SearchReply{} }
func (m *SearchReply) String() string { return proto.CompactTextString(m) }
func (*SearchReply) ProtoMessage()    {}
func (*SearchReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3976a3fc1d3bd0b, []int{7}
}

func (m *SearchReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchReply.Unmarshal(m, b)
}
func (m *SearchReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchReply.Marshal(b, m, deterministic)
}
func (m *SearchReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchReply.Merge(m, src)
}
func (m *SearchReply) XXX_Size() int {
	return xxx_messageInfo_SearchReply.Size(m)
}
func (m *SearchReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchReply.DiscardUnknown(m)
}

var xxx_messageInfo_SearchReply proto.InternalMessageInfo

func (m *SearchReply) GetProperties() map[string]*PropertyValue {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *SearchReply) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *SearchReply) GetDepth() int64 {
	if m != nil {
		return m.Depth
	}
	return 0
}

func (m *SearchReply) GetFactName() string {
	if m != nil {
		return m.FactName
	}
	return ""
}

func (m *SearchReply) GetDecorators() []string {
	if m != nil {
		return m.Decorators
	}
	return nil
}

func (m *SearchReply) GetChildren() []*SearchReply {
	if m != nil {
		return m.Children
	}
	return nil
}

type PropertyValue struct {
	// Types that are valid to be assigned to Prop:
	//	*PropertyValue_StringProp
	//	*PropertyValue_BoolProp
	//	*PropertyValue_Int64Prop
	//	*PropertyValue_FloatProp
	Prop                 isPropertyValue_Prop `protobuf_oneof:"prop"`
	Decorators           []string             `protobuf:"bytes,5,rep,name=decorators,proto3" json:"decorators,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PropertyValue) Reset()         { *m = PropertyValue{} }
func (m *PropertyValue) String() string { return proto.CompactTextString(m) }
func (*PropertyValue) ProtoMessage()    {}
func (*PropertyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3976a3fc1d3bd0b, []int{8}
}

func (m *PropertyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PropertyValue.Unmarshal(m, b)
}
func (m *PropertyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PropertyValue.Marshal(b, m, deterministic)
}
func (m *PropertyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PropertyValue.Merge(m, src)
}
func (m *PropertyValue) XXX_Size() int {
	return xxx_messageInfo_PropertyValue.Size(m)
}
func (m *PropertyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_PropertyValue.DiscardUnknown(m)
}

var xxx_messageInfo_PropertyValue proto.InternalMessageInfo

type isPropertyValue_Prop interface {
	isPropertyValue_Prop()
}

type PropertyValue_StringProp struct {
	StringProp string `protobuf:"bytes,1,opt,name=stringProp,proto3,oneof"`
}

type PropertyValue_BoolProp struct {
	BoolProp bool `protobuf:"varint,2,opt,name=boolProp,proto3,oneof"`
}

type PropertyValue_Int64Prop struct {
	Int64Prop int64 `protobuf:"varint,3,opt,name=int64Prop,proto3,oneof"`
}

type PropertyValue_FloatProp struct {
	FloatProp float32 `protobuf:"fixed32,4,opt,name=floatProp,proto3,oneof"`
}

func (*PropertyValue_StringProp) isPropertyValue_Prop() {}

func (*PropertyValue_BoolProp) isPropertyValue_Prop() {}

func (*PropertyValue_Int64Prop) isPropertyValue_Prop() {}

func (*PropertyValue_FloatProp) isPropertyValue_Prop() {}

func (m *PropertyValue) GetProp() isPropertyValue_Prop {
	if m != nil {
		return m.Prop
	}
	return nil
}

func (m *PropertyValue) GetStringProp() string {
	if x, ok := m.GetProp().(*PropertyValue_StringProp); ok {
		return x.StringProp
	}
	return ""
}

func (m *PropertyValue) GetBoolProp() bool {
	if x, ok := m.GetProp().(*PropertyValue_BoolProp); ok {
		return x.BoolProp
	}
	return false
}

func (m *PropertyValue) GetInt64Prop() int64 {
	if x, ok := m.GetProp().(*PropertyValue_Int64Prop); ok {
		return x.Int64Prop
	}
	return 0
}

func (m *PropertyValue) GetFloatProp() float32 {
	if x, ok := m.GetProp().(*PropertyValue_FloatProp); ok {
		return x.FloatProp
	}
	return 0
}

func (m *PropertyValue) GetDecorators() []string {
	if m != nil {
		return m.Decorators
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*PropertyValue) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*PropertyValue_StringProp)(nil),
		(*PropertyValue_BoolProp)(nil),
		(*PropertyValue_Int64Prop)(nil),
		(*PropertyValue_FloatProp)(nil),
	}
}

type UserVariableSetter struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Default              string   `protobuf:"bytes,2,opt,name=default,proto3" json:"default,omitempty"`
	Id                   int64    `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserVariableSetter) Reset()         { *m = UserVariableSetter{} }
func (m *UserVariableSetter) String() string { return proto.CompactTextString(m) }
func (*UserVariableSetter) ProtoMessage()    {}
func (*UserVariableSetter) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3976a3fc1d3bd0b, []int{9}
}

func (m *UserVariableSetter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserVariableSetter.Unmarshal(m, b)
}
func (m *UserVariableSetter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserVariableSetter.Marshal(b, m, deterministic)
}
func (m *UserVariableSetter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserVariableSetter.Merge(m, src)
}
func (m *UserVariableSetter) XXX_Size() int {
	return xxx_messageInfo_UserVariableSetter.Size(m)
}
func (m *UserVariableSetter) XXX_DiscardUnknown() {
	xxx_messageInfo_UserVariableSetter.DiscardUnknown(m)
}

var xxx_messageInfo_UserVariableSetter proto.InternalMessageInfo

func (m *UserVariableSetter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserVariableSetter) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *UserVariableSetter) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UserVariableValue struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserVariableValue) Reset()         { *m = UserVariableValue{} }
func (m *UserVariableValue) String() string { return proto.CompactTextString(m) }
func (*UserVariableValue) ProtoMessage()    {}
func (*UserVariableValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3976a3fc1d3bd0b, []int{10}
}

func (m *UserVariableValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserVariableValue.Unmarshal(m, b)
}
func (m *UserVariableValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserVariableValue.Marshal(b, m, deterministic)
}
func (m *UserVariableValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserVariableValue.Merge(m, src)
}
func (m *UserVariableValue) XXX_Size() int {
	return xxx_messageInfo_UserVariableValue.Size(m)
}
func (m *UserVariableValue) XXX_DiscardUnknown() {
	xxx_messageInfo_UserVariableValue.DiscardUnknown(m)
}

var xxx_messageInfo_UserVariableValue proto.InternalMessageInfo

func (m *UserVariableValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *UserVariableValue) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*Request)(nil), "flow.Request")
	proto.RegisterType((*Reply)(nil), "flow.Reply")
	proto.RegisterType((*ReviewRequest)(nil), "flow.ReviewRequest")
	proto.RegisterType((*Issue)(nil), "flow.Issue")
	proto.RegisterMapType((map[string]string)(nil), "flow.Issue.MetricsEntry")
	proto.RegisterType((*IssueRange)(nil), "flow.IssueRange")
	proto.RegisterType((*Position)(nil), "flow.Position")
	proto.RegisterType((*SearchRequest)(nil), "flow.SearchRequest")
	proto.RegisterType((*SearchReply)(nil), "flow.SearchReply")
	proto.RegisterMapType((map[string]*PropertyValue)(nil), "flow.SearchReply.PropertiesEntry")
	proto.RegisterType((*PropertyValue)(nil), "flow.PropertyValue")
	proto.RegisterType((*UserVariableSetter)(nil), "flow.UserVariableSetter")
	proto.RegisterType((*UserVariableValue)(nil), "flow.UserVariableValue")
}

func init() {
	proto.RegisterFile("github.com/codelingo/rpc/flow/flow.proto", fileDescriptor_b3976a3fc1d3bd0b)
}

var fileDescriptor_b3976a3fc1d3bd0b = []byte{
	// 1033 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0x5f, 0x6f, 0xdb, 0x36,
	0x10, 0x8f, 0xac, 0x38, 0x96, 0xcf, 0x71, 0x9a, 0x72, 0x41, 0x41, 0x04, 0x45, 0xe1, 0x09, 0x05,
	0xe6, 0xfd, 0x93, 0x07, 0x6f, 0x18, 0xb6, 0xbe, 0xe5, 0xcf, 0x86, 0x04, 0x48, 0x17, 0x83, 0xed,
	0xba, 0x67, 0x5a, 0xa2, 0x6c, 0xae, 0xb2, 0xa8, 0x91, 0x74, 0x12, 0x7f, 0x9d, 0x7d, 0x89, 0x3d,
	0xec, 0x83, 0xed, 0x71, 0xc3, 0x51, 0x94, 0xa3, 0xb4, 0x1d, 0xb6, 0x87, 0x24, 0xf7, 0xbb, 0x3b,
	0x1e, 0x79, 0xbf, 0xfb, 0x91, 0x0a, 0x8c, 0x17, 0xd2, 0x2e, 0xd7, 0xf3, 0x24, 0x55, 0xab, 0x49,
	0xaa, 0x32, 0x51, 0xc8, 0x72, 0xa1, 0x26, 0xba, 0x4a, 0x27, 0x79, 0xa1, 0x6e, 0xdd, 0xaf, 0xa4,
	0xd2, 0xca, 0x2a, 0xb2, 0x8b, 0xf6, 0xf1, 0xa4, 0x95, 0xbf, 0x50, 0x05, 0x2f, 0x17, 0x13, 0x17,
	0x9e, 0xaf, 0xf3, 0x49, 0x65, 0x37, 0x95, 0x30, 0x13, 0x5e, 0x6e, 0xf0, 0xa7, 0x5e, 0x16, 0xbf,
	0x84, 0x1e, 0x13, 0xbf, 0xad, 0x85, 0xb1, 0x84, 0x80, 0xab, 0x41, 0x83, 0x51, 0x30, 0xee, 0x33,
	0x67, 0x93, 0x04, 0x7a, 0x15, 0xdf, 0x14, 0x8a, 0x67, 0xb4, 0x33, 0x0a, 0xc6, 0x83, 0xe9, 0x51,
	0xb2, 0x50, 0x6a, 0x51, 0x88, 0xa4, 0x29, 0x9b, 0x9c, 0x94, 0x1b, 0xd6, 0x24, 0xc5, 0x0a, 0xba,
	0x4c, 0x54, 0xc5, 0xa6, 0xbd, 0x30, 0xf8, 0x1f, 0x0b, 0xc9, 0x11, 0x74, 0x85, 0xd6, 0x4a, 0xbb,
	0x6d, 0xfa, 0xac, 0x06, 0x64, 0x04, 0x03, 0x69, 0x2e, 0x04, 0xd7, 0x76, 0x2e, 0xb8, 0xa5, 0x8f,
	0x46, 0xc1, 0x38, 0x62, 0x6d, 0x57, 0xfc, 0x57, 0x07, 0x86, 0x4c, 0xdc, 0x48, 0x71, 0xdb, 0x6a,
	0x63, 0xa9, 0x8c, 0x6d, 0xda, 0x40, 0x9b, 0x1c, 0x43, 0x84, 0x7f, 0x4b, 0xbe, 0x12, 0x7e, 0x83,
	0x2d, 0x26, 0x4f, 0xa0, 0xab, 0x6e, 0x4b, 0xa1, 0xe9, 0x3e, 0x06, 0x2e, 0x76, 0x58, 0x0d, 0xd1,
	0x9f, 0x89, 0x4a, 0x59, 0x3a, 0x6c, 0xfc, 0x0e, 0x62, 0x7d, 0x2d, 0x2a, 0x45, 0x77, 0xeb, 0xfa,
	0x68, 0x93, 0x43, 0x08, 0xcd, 0x92, 0xd3, 0xae, 0x73, 0xa1, 0x49, 0x28, 0xf4, 0x66, 0xdc, 0xa6,
	0x4b, 0x61, 0xe8, 0xde, 0x28, 0x1c, 0xf7, 0x59, 0x03, 0xc9, 0x73, 0x18, 0x4a, 0x33, 0x5b, 0x17,
	0x85, 0x3f, 0x30, 0xed, 0xb9, 0xae, 0x1e, 0x3a, 0x31, 0xab, 0xba, 0x87, 0x97, 0xe7, 0x34, 0x1a,
	0x05, 0xe3, 0x90, 0x3d, 0x74, 0xe2, 0xbe, 0x37, 0xa9, 0xa1, 0xfd, 0x7a, 0xdf, 0x9b, 0xd4, 0x60,
	0xa7, 0x99, 0xb2, 0x4e, 0x26, 0x14, 0xea, 0x4e, 0x1b, 0x8c, 0xd9, 0x99, 0xd4, 0x74, 0x50, 0x67,
	0x67, 0x52, 0x63, 0x2f, 0x15, 0xb7, 0x4b, 0x7a, 0x50, 0xf7, 0x82, 0x36, 0x79, 0x02, 0x7b, 0x99,
	0xcc, 0xf3, 0xcb, 0x73, 0x47, 0x77, 0xc8, 0x3c, 0x3a, 0x3d, 0x80, 0x7d, 0x47, 0xcc, 0xb5, 0x3e,
	0x47, 0x1e, 0xe2, 0xbf, 0x43, 0xe8, 0x5e, 0x1a, 0xb3, 0x16, 0x58, 0xc5, 0x31, 0xeb, 0x19, 0x77,
	0xac, 0x7e, 0x01, 0x51, 0xa5, 0x8c, 0xb4, 0x52, 0x95, 0x5e, 0x39, 0x87, 0x89, 0x53, 0xab, 0x5b,
	0xc2, 0x78, 0xb9, 0x10, 0x6c, 0x9b, 0x81, 0x6c, 0xa5, 0x6a, 0xb5, 0x12, 0xa5, 0xa5, 0xa1, 0x2b,
	0xd2, 0x40, 0xf2, 0x14, 0xfa, 0xa9, 0xbd, 0x3b, 0x15, 0xb9, 0xd2, 0xc2, 0x53, 0x7e, 0xef, 0xc0,
	0x6e, 0x0b, 0x59, 0x8a, 0xd7, 0xe2, 0xce, 0x7a, 0xf2, 0xb7, 0x18, 0x63, 0xa9, 0xbd, 0x3b, 0xc9,
	0xad, 0xd0, 0x74, 0xaf, 0x8e, 0x35, 0x98, 0x4c, 0xa1, 0xb7, 0x12, 0x56, 0xcb, 0xd4, 0xd0, 0xde,
	0x28, 0x1c, 0x0f, 0xa6, 0xb4, 0x75, 0xb8, 0xe4, 0x65, 0x1d, 0xfa, 0xa1, 0xb4, 0x7a, 0xc3, 0x9a,
	0x44, 0xec, 0xd2, 0xf2, 0x85, 0xa1, 0x91, 0x1b, 0xa7, 0xb3, 0xd1, 0x57, 0xc8, 0xf2, 0xad, 0x1f,
	0x80, 0xb3, 0xb1, 0x97, 0x52, 0xdc, 0x9e, 0xa9, 0x4c, 0xb8, 0x01, 0x44, 0xac, 0x81, 0xa8, 0xf1,
	0x0a, 0x45, 0xe0, 0x27, 0x50, 0x03, 0x9c, 0x8a, 0xd0, 0x5e, 0x7d, 0x0c, 0x4d, 0xac, 0x90, 0x49,
	0x93, 0x72, 0x9d, 0x39, 0xed, 0x45, 0xac, 0x81, 0xa8, 0x0a, 0x6f, 0x32, 0xc1, 0x8d, 0x2a, 0xfd,
	0xe0, 0x1e, 0x3a, 0xc9, 0x67, 0x70, 0x78, 0x2e, 0x52, 0xa5, 0xb9, 0x55, 0xfa, 0xba, 0x42, 0x82,
	0x0d, 0x3d, 0x74, 0x89, 0xef, 0xf9, 0x8f, 0x5f, 0xc0, 0x7e, 0xbb, 0x5d, 0x3c, 0xcd, 0x5b, 0xb1,
	0xf1, 0xa3, 0x44, 0x13, 0x4f, 0x7d, 0xc3, 0x8b, 0x75, 0x73, 0x71, 0x6a, 0xf0, 0xa2, 0xf3, 0x5d,
	0x10, 0xbf, 0x06, 0xb8, 0x9f, 0x26, 0x79, 0x0e, 0x5d, 0x63, 0xb9, 0xb6, 0xfe, 0xbe, 0x1f, 0xd4,
	0x8c, 0xce, 0xfc, 0x88, 0x59, 0x1d, 0x24, 0x23, 0x08, 0x45, 0xd9, 0x3c, 0x26, 0xef, 0xe6, 0x60,
	0x28, 0xfe, 0x15, 0xa2, 0xc6, 0x81, 0x33, 0xcc, 0x65, 0x21, 0x5a, 0xea, 0xda, 0x62, 0xd4, 0xe9,
	0x75, 0x9e, 0x1b, 0x61, 0x5d, 0xb1, 0x90, 0x79, 0x84, 0x33, 0xb9, 0x92, 0xa5, 0x70, 0x42, 0x0a,
	0x99, 0xb3, 0x31, 0xf7, 0x4c, 0x15, 0xeb, 0x55, 0xe9, 0x24, 0x14, 0x32, 0x8f, 0xe2, 0xcf, 0x61,
	0xf8, 0x4a, 0x70, 0x9d, 0x2e, 0x9b, 0x6b, 0xd7, 0xbe, 0x3e, 0xc1, 0xc3, 0xeb, 0x13, 0xff, 0xd9,
	0x81, 0x41, 0x93, 0x8d, 0x4f, 0xdc, 0x09, 0x40, 0xa5, 0x55, 0x25, 0xb4, 0x95, 0xc2, 0xd0, 0xc0,
	0xe9, 0xe8, 0xe3, 0xba, 0xa3, 0x56, 0x5a, 0x32, 0xdb, 0xe6, 0xd4, 0x82, 0x6a, 0x2d, 0xfa, 0x97,
	0x57, 0xef, 0xc8, 0xbd, 0x3c, 0x76, 0xe9, 0x5b, 0xa8, 0x81, 0xe3, 0x82, 0xa7, 0xf6, 0x27, 0xe4,
	0x62, 0xd7, 0x73, 0xe1, 0x31, 0x79, 0x06, 0x90, 0x35, 0x93, 0x35, 0xb4, 0xeb, 0x14, 0xda, 0xf2,
	0x90, 0x2f, 0x21, 0x4a, 0x97, 0xb2, 0xc8, 0xb4, 0x28, 0xdd, 0x73, 0x34, 0x98, 0x3e, 0x7e, 0xef,
	0xa0, 0x6c, 0x9b, 0x72, 0xcc, 0xe0, 0xd1, 0x3b, 0xa7, 0xfe, 0x80, 0x2e, 0x3e, 0x6d, 0xeb, 0x62,
	0x30, 0xfd, 0xc8, 0xcf, 0xb2, 0x5e, 0xb7, 0x79, 0x83, 0xa1, 0xb6, 0x58, 0xfe, 0x08, 0x60, 0xf8,
	0x20, 0x48, 0x46, 0x00, 0xc6, 0x6a, 0x59, 0x2e, 0xd0, 0x5d, 0x57, 0xbe, 0xd8, 0x61, 0x2d, 0x1f,
	0x79, 0x0a, 0xd1, 0x5c, 0xa9, 0xc2, 0xc5, 0x71, 0x97, 0xe8, 0x62, 0x87, 0x6d, 0x3d, 0xe4, 0x19,
	0xf4, 0x65, 0x69, 0xbf, 0xfd, 0xc6, 0x85, 0x1d, 0x55, 0x17, 0x3b, 0xec, 0xde, 0x85, 0xf1, 0xbc,
	0x50, 0xdc, 0xba, 0x38, 0x32, 0xd6, 0xc1, 0xf8, 0xd6, 0xf5, 0x5f, 0xa4, 0x9d, 0xee, 0xc1, 0x2e,
	0x8e, 0x2a, 0x66, 0x40, 0x7e, 0x36, 0x42, 0xbf, 0xe1, 0x5a, 0xf2, 0x79, 0x21, 0x5e, 0x09, 0x8b,
	0x4f, 0xc8, 0x87, 0x1e, 0x3d, 0xbc, 0xb8, 0x22, 0xe7, 0xeb, 0xc2, 0xfa, 0x81, 0x36, 0x90, 0x1c,
	0x40, 0x47, 0x66, 0x7e, 0x9e, 0x1d, 0x99, 0xc5, 0xdf, 0xc3, 0xe3, 0x76, 0xcd, 0x9a, 0x90, 0xed,
	0x4d, 0x0b, 0x5a, 0x37, 0xcd, 0x2f, 0xed, 0x34, 0x4b, 0xa7, 0x13, 0xd8, 0xfd, 0x11, 0x3f, 0xcd,
	0x9f, 0x40, 0xc8, 0xd6, 0x25, 0x19, 0xd6, 0xbc, 0x7b, 0x01, 0x1f, 0x0f, 0x1a, 0x58, 0x15, 0x9b,
	0x78, 0x67, 0x1c, 0x7c, 0x15, 0x9c, 0x26, 0x70, 0x24, 0x55, 0xb2, 0xfd, 0xef, 0x21, 0x59, 0xe8,
	0x2a, 0x4d, 0xd2, 0xe2, 0xf4, 0x00, 0x1f, 0xa5, 0x2b, 0x74, 0xcd, 0xf0, 0x93, 0x3c, 0x0b, 0x7e,
	0xef, 0x84, 0x67, 0x57, 0xbf, 0xcc, 0xf7, 0xdc, 0x17, 0xfa, 0xeb, 0x7f, 0x02, 0x00, 0x00, 0xff,
	0xff, 0xe8, 0x9a, 0x86, 0x8f, 0x7c, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FlowClient is the client API for Flow service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FlowClient interface {
	// Run sends a Request to run a Flow and returns a stream of the Flow's replies.
	Run(ctx context.Context, opts ...grpc.CallOption) (Flow_RunClient, error)
}

type flowClient struct {
	cc *grpc.ClientConn
}

func NewFlowClient(cc *grpc.ClientConn) FlowClient {
	return &flowClient{cc}
}

func (c *flowClient) Run(ctx context.Context, opts ...grpc.CallOption) (Flow_RunClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Flow_serviceDesc.Streams[0], "/flow.Flow/Run", opts...)
	if err != nil {
		return nil, err
	}
	x := &flowRunClient{stream}
	return x, nil
}

type Flow_RunClient interface {
	Send(*Request) error
	Recv() (*Reply, error)
	grpc.ClientStream
}

type flowRunClient struct {
	grpc.ClientStream
}

func (x *flowRunClient) Send(m *Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *flowRunClient) Recv() (*Reply, error) {
	m := new(Reply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FlowServer is the server API for Flow service.
type FlowServer interface {
	// Run sends a Request to run a Flow and returns a stream of the Flow's replies.
	Run(Flow_RunServer) error
}

// UnimplementedFlowServer can be embedded to have forward compatible implementations.
type UnimplementedFlowServer struct {
}

func (*UnimplementedFlowServer) Run(srv Flow_RunServer) error {
	return status.Errorf(codes.Unimplemented, "method Run not implemented")
}

func RegisterFlowServer(s *grpc.Server, srv FlowServer) {
	s.RegisterService(&_Flow_serviceDesc, srv)
}

func _Flow_Run_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FlowServer).Run(&flowRunServer{stream})
}

type Flow_RunServer interface {
	Send(*Reply) error
	Recv() (*Request, error)
	grpc.ServerStream
}

type flowRunServer struct {
	grpc.ServerStream
}

func (x *flowRunServer) Send(m *Reply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *flowRunServer) Recv() (*Request, error) {
	m := new(Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Flow_serviceDesc = grpc.ServiceDesc{
	ServiceName: "flow.Flow",
	HandlerType: (*FlowServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Run",
			Handler:       _Flow_Run_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "github.com/codelingo/rpc/flow/flow.proto",
}
