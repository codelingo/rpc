// Copyright 2015, Google Inc.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.codelingo.grpc.cl";
option java_outer_classname = "CodeLingoProto";
option objc_class_prefix = "CLW";

package flow;

service Flow {
    // Reviews files
    rpc Review (ReviewRequest) returns (stream Issue) {}
    rpc Codemod (ReviewRequest) returns (stream Issue) {}
    rpc Search (SearchRequest) returns (stream SearchReply) {}
}

// The request message containing the files or directories to review.
message ReviewRequest {
    string host = 1;
    string hostname = 2;
    oneof ownerOrDepot {
        string owner = 12;
        string depot= 13;
    }
    string repo= 4;
    string sha = 5;
    repeated string Patches = 6;
    bool isPullRequest = 7;
    int64 pullRequestID = 8;
    string vcs = 9;
    string dotlingo = 10;
    string dir = 11;
}


// Issue returned from a review.
message Issue {
    // The name of the issue.
    string name         =1; // Name is the the name of the checker that added the issue
    IssueRange position =2;    // position in source file
    string comment      =3;        // The rendered comment for this issue.
    string ctxBefore    =4;      // source lines before the problem line(s)
    string lineText     =5;    // the source line(s)
    string ctxAfter     =6;   // source lines after the problem line(s)
    map<string, string> metrics = 7; // metrics set when the issue was raised.
    repeated string tags =8; // tags added when the issue was raised.
    string link         =9; // (optional) the link to the style guide for the problem
    bool newCode        =10; // When checking a diff, this indicates if the issue was found in existing or new code.
    string patch        =11; // A diff patch resolving the issue.
    string err          =12; // Any err encounted while building the issue.
    bool discard        =13; // TODO(waigani) discard is only used by client and shouldn't be on wire format.
    string discardReason=14; // TODO(waigani) also should not be on wire format.
    // isHeartbeat is used to periodically send pings from the server to keep long running connections alive.
    // clients can safely ignore this field as no other data will be sent with it.
    bool isHeartbeat = 15;
}

message IssueRange {
    Position start =1;
    Position end =2;
}

message Position  {
    string filename =1; // filename, if any
    int64 Offset     =2;  // offset, starting at 0
    int64 Line       =3;  // line number, starting at 1
    int64 Column     =4;  // column number, starting at 1 (byte count)
}

message SearchRequest {
    string dotlingo = 1;
}

message SearchReply {
    map<string, PropertyValue> properties = 1;
    string error = 2;
    int64 depth = 3;
    string factName = 4;
    repeated string decorators = 5;
    repeated SearchReply children = 6;
}

message PropertyValue {
    oneof prop {
        string stringProp = 1;
        bool boolProp = 2;
        int64 int64Prop = 3;
        float floatProp = 4;
    }
    repeated string decorators = 5;
}
